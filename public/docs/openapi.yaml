openapi: 3.0.3
info:
  title: 'Parent Baby Tracking - API Documentation'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://127.0.0.1:8000'
paths:
  /api/parents/register:
    post:
      summary: 'Register a ParentUser.'
      description: 'Allow the parentUser to Register'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Auth Parents'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: required
                  description: 'name of the parent.'
                  example: Eyad
                email:
                  type: required
                  description: 'The email of the parent.'
                  example: eyad@gmail.com
      security: []
  /api/parents/login:
    post:
      summary: 'Login a ParentUser.'
      description: 'Allow the parentUser to Login'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  error: Unauthorized
                properties:
                  error:
                    type: string
                    example: Unauthorized
      tags:
        - 'Auth Parents'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: .
                  description: ''
                  example: '9'
                name:
                  type: string
                  description: 'This field is required when <code>id</code> is not present. Must not be greater than 255 characters.'
                  example: zmsxuqojfdsywwnxttdyfasndchafax
      security: []
  /api/babies:
    get:
      summary: 'All Babies.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: '0'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 38
                      name: 'Mr. Dameon Williamson'
                    -
                      id: 39
                      name: 'Mrs. June Kihn'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 38
                        name: 'Mr. Dameon Williamson'
                      -
                        id: 39
                        name: 'Mrs. June Kihn'
                    description: '"list of all Babies"'
                    items:
                      type: object
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated
                properties:
                  message:
                    type: string
                    example: Unauthenticated
      tags:
        - 'Baby Resource'
    post:
      summary: 'Store a Baby.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Baby Resource'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ilruih
              required:
                - name
  '/api/babies/{id}':
    get:
      summary: 'Show Baby.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: '0'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 40
                    name: 'Kellie Boyle'
                properties:
                  data:
                    type: object
                    example:
                      id: 40
                      name: 'Kellie Boyle'
                    description: "\" App\\Models\\Baby Info\"\nReturn a one App\\Models\\Baby by id"
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated
                properties:
                  message:
                    type: string
                    example: Unauthenticated
      tags:
        - 'Baby Resource'
    put:
      summary: 'Update a specified Baby.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Baby Resource'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: poivbvgpmmlolzsuvpmngvnsldhpxcdyzlbnqzxcfxupwyenekqujriiqidleohomdjsuyspjtbintaxzxunnugtncioemnulaogsqizoowujjyudcxmcqiqlvgfsjxojfamzmqeqvsspjdtnzraswaovogibppjpxpyqnfqg
              required:
                - name
    delete:
      summary: 'Remove a specified Baby.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Baby Resource'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the baby.'
        example: 10
        required: true
        schema:
          type: integer
  /api/parents/invite:
    post:
      summary: 'Invite a parent to be your partner.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - 'Parents API'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: The
                  description: 'id of the parent.'
                  example: '9'
  /api/parents:
    get:
      summary: 'Show Partner.'
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: '0'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 28
                      name: 'Shayne Moore'
                      email: connor84@example.org
                    -
                      id: 29
                      name: 'Jordane Spinka'
                      email: laisha.becker@example.org
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 28
                        name: 'Shayne Moore'
                        email: connor84@example.org
                      -
                        id: 29
                        name: 'Jordane Spinka'
                        email: laisha.becker@example.org
                    items:
                      type: object
        401:
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated
                properties:
                  message:
                    type: string
                    example: Unauthenticated
      tags:
        - 'Parents API'
tags:
  -
    name: 'Auth Parents'
    description: ''
  -
    name: 'Baby Resource'
    description: "\nAPIs for Baby Resource Management"
  -
    name: 'Parents API'
    description: "\nAPI for parents to manage their partner"
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
